<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CPR.redHome.mapper.community.CommunityMapper">


    <sql id ="search" >
        <if test="searchType == 'search_communityTitle'">
            community_title like CONCAT('%',#{searchKeyword},'%')

        </if>
        <if test="searchType == 'search_communityContents'">
            community_contents like CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchType == 'search_memberId'">
            member_id like CONCAT('%',#{searchKeyword},'%')
        </if>
    </sql>




    <select id="selectCommunityTotalCnt" resultType="java.lang.Integer" >
      select count(*)
      from community
      <where>
        <if test="searchType != null">
         <include refid="search"></include>
         </if>

         <if test="searchType != null  and reply =='not_yet'">and</if>

          <if test="reply == 'not_yet'">
             community_state = '답변대기'
         </if>

      </where>


    </select>


   <!-- LIMIT의 첫 번째 파라미터는 시작 위치(몇 번째 데이터부터 가지고 올 것인지)를 지정하고,
    두 번째 파라미터는 시작 위치를 기준으로 가지고 올 데이터의 개수를 지정-->
    <select id="selectAllCommunities" resultType="com.CPR.redHome.dto.community.CommunityDto" >

        select  community.community_id as communityId, member_id as memberId, community_title as communityTitle, community_contents as communityContents, community_img as communityImg, community_created_date as communityCreatedDate, community_state as communityState, community_hit as communityHit
        <if test="orderType == 'newComment'">, comments.comment_id as ccommentId </if>
        <choose>
            <when test="orderType == 'newComment'">
                from community left outer join comments
                on comments.community_id = community.community_id
            </when>
            <otherwise>
                from community
            </otherwise>
        </choose>

        <where>


            <if test="searchType != null">
                <include refid="search"></include>
            </if>

            <if test="searchType != null and reply =='not_yet'">and</if>

            <if test="reply == 'not_yet'">
                community_state = '답변대기'
            </if>


        </where>

        <if test='orderType != "newComment" and orderType != "mostPopular"'>
            order by community.community_id desc
        </if>
        <if test='orderType == "mostPopular"'>
            order by community_hit desc
        </if>
        <if test='orderType == "newComment"'>
            order by comments.comment_id desc
        </if>



        limit #{firstRecordIndex}, #{recordsPerPage}

    </select>



    <select id="selectCommentsCnt"  resultType="java.lang.Integer" parameterType="java.lang.Long">
         select count(*)
         from comments
         where community_id = ${communityId}

    </select>



    <select id="selectCommunity" parameterType="java.lang.Long" resultType="com.CPR.redHome.dto.community.CommunityDto">

        select community_id as communityId, member_id as memberId, community_title as communityTitle, community_contents as communityContents, community_img as communityImg, community_created_date as communityCreatedDate, community_state as communityState, community_hit  as communityHit
        from community
        where community_id = ${value}

    </select>


    <select id="selectComments" parameterType="java.lang.Long" resultType="com.CPR.redHome.dto.community.CommentsDto">

        select comment_id as commentId,  community_id as communityId,  comment_contents as commentContents, comment_created_date as commentCreatedDate, member_id as memberId
        from comments
        where community_id = ${communityId}

    </select>

    <update id="updateCommunityHitCnt" parameterType="java.lang.Long">

       update community set community_hit = community_hit + 1 where community_id = ${communityId}

    </update>


    <delete id="deleteCommunity" parameterType="java.lang.Long">

       delete from community where community_id = ${communityId}

    </delete>



</mapper>